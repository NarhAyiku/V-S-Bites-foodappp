<<<<<<< HEAD
# Uncomment this line to define a global platform for your project
platform :ios, '14.0'

# CocoaPods analytics sends network stats synchronously affecting flutter build latency.
=======
# Uncomment the next line to define a global platform for your project
platform :ios, '13.0'

# CocoaPods analytics disables
>>>>>>> 7d254673eea77aca16eeeb906fa5155b870e92e7
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
<<<<<<< HEAD
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

=======
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure 'flutter pub get' is executed first."
  end
>>>>>>> 7d254673eea77aca16eeeb906fa5155b870e92e7
  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
<<<<<<< HEAD
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Generated.xcconfig, then run flutter pub get"
=======
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}"
>>>>>>> 7d254673eea77aca16eeeb906fa5155b870e92e7
end

require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

<<<<<<< HEAD
flutter_ios_podfile_setup

=======
>>>>>>> 7d254673eea77aca16eeeb906fa5155b870e92e7
target 'Runner' do
  use_frameworks!
  use_modular_headers!

  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
<<<<<<< HEAD
  target 'RunnerTests' do
    inherit! :search_paths
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    flutter_additional_ios_build_settings(target)
  end
end
=======

  # ðŸ‘‡ðŸ‘‡ ADD THESE LINES to explicitly link Firestore native dependencies
  pod 'Firebase/Core'
  pod 'Firebase/Firestore'

  target 'RunnerTests' do
    inherit! :search_paths
    # Pods for testing
  end
end# # # Uncomment the next line to define a global platform for your project
# # platform :ios, '13.0'

# # target 'Runner' do
# #   # Comment the next line if you don't want to use dynamic frameworks
# #   use_frameworks!

# #   # Pods for Runner

# #   target 'RunnerTests' do
# #     inherit! :search_paths
# #     # Pods for testing
# #   end

# # end

# # Uncomment the next line to define a global platform for your project
# platform :ios, '13.0'

# # CocoaPods analytics disables
# ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# project 'Runner', {
#   'Debug' => :debug,
#   'Profile' => :release,
#   'Release' => :release,
# }

# def flutter_root
#   generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
#   unless File.exist?(generated_xcode_build_settings_path)
#     raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure 'flutter pub get' is executed first."
#   end
#   File.foreach(generated_xcode_build_settings_path) do |line|
#     matches = line.match(/FLUTTER_ROOT\=(.*)/)
#     return matches[1].strip if matches
#   end
#   raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}"
# end

# require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

# target 'Runner' do
#   use_frameworks!
#   use_modular_headers!

#   flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))

#   target 'RunnerTests' do
#     inherit! :search_paths
#     # Pods for testing
#   end
# end
 
>>>>>>> 7d254673eea77aca16eeeb906fa5155b870e92e7
